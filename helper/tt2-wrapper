#!/usr/bin/perl -CSD
# Purpose: template toolkit helper script
################################################################################

use strict;
use warnings;

use Getopt::Long;
use Hash::Merge qw(merge);
use Storable;
use Template;
use YAML qw/LoadFile/;

my $help;
my $reuse;

GetOptions(
    'help'    => \$help,
    'reuse=s' => \$reuse,
) or die "Usage: $0 [--reuse <file>] <template> <config.yml> [<another.yml>]";

my $tt = Template->new({ ABSOLUTE => 1, RELATIVE => 1, EVAL_PERL => 1 });
my $template = shift(@ARGV) or die "Usage: $0 [--reuse <file>] <template> <config.yml> [<another.yml>]";

my $config = {};

if ($reuse) {
  if (-e $reuse) {
    $config = retrieve($reuse);
  } else {
    foreach my $file (@ARGV) {
      $config = merge($config, LoadFile($file) || die $!);
    }

    store($config, $reuse);
  }
} else {
  foreach my $file (@ARGV) {
    $config = merge($config, LoadFile($file) || die $!);
  }
}

# NOTE: we can't rely on "$tt->process($template, $config)" because the config
# file is UTF8 encoded but is then being read as a binary 8bit file and written
# as UTF8 file again, causing wide characters getting encoded twice
open my $fh, '<', $template or die "Unable to open file for reading: $!";
$tt->process($fh, $config) or die $tt->error;

## END OF FILE #################################################################
